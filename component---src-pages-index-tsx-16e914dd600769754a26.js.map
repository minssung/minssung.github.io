{"version":3,"file":"component---src-pages-index-tsx-16e914dd600769754a26.js","mappings":"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","sources":["webpack://minssung.github.io/./node_modules/camelcase/index.js","webpack://minssung.github.io/../src/image-utils.ts","webpack://minssung.github.io/../src/components/hooks.ts","webpack://minssung.github.io/../src/components/layout-wrapper.tsx","webpack://minssung.github.io/../src/components/picture.tsx","webpack://minssung.github.io/../src/components/placeholder.tsx","webpack://minssung.github.io/../src/components/main-image.tsx","webpack://minssung.github.io/../src/components/gatsby-image.server.tsx","webpack://minssung.github.io/../src/components/gatsby-image.browser.tsx","webpack://minssung.github.io/../src/components/static-image.server.tsx","webpack://minssung.github.io/../src/components/static-image.tsx","webpack://minssung.github.io/./node_modules/@styled-icons/styled-icon/index.esm.js","webpack://minssung.github.io/./node_modules/@styled-icons/boxicons-logos/Github/Github.esm.js","webpack://minssung.github.io/./node_modules/@styled-icons/material-outlined/DarkMode/DarkMode.esm.js","webpack://minssung.github.io/./node_modules/@styled-icons/material-outlined/LightMode/LightMode.esm.js","webpack://minssung.github.io/./src/components/layout/header.tsx","webpack://minssung.github.io/./src/components/layout/index.tsx","webpack://minssung.github.io/./src/hooks/useSiteMetadata.tsx","webpack://minssung.github.io/./src/components/seo/index.tsx","webpack://minssung.github.io/./src/components/card/index.tsx","webpack://minssung.github.io/./src/templates/posts.tsx","webpack://minssung.github.io/./src/pages/index.tsx","webpack://minssung.github.io/./src/components/comments/index.tsx","webpack://minssung.github.io/./src/templates/blog.tsx","webpack://minssung.github.io/./src/utils/theme.ts","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/extends.js","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://minssung.github.io/./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"iconAttrs\", \"iconVerticalAlign\", \"iconViewBox\", \"size\", \"title\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport styled from 'styled-components';\nvar StyledIconBaseBase = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n    iconAttrs = props.iconAttrs,\n    iconVerticalAlign = props.iconVerticalAlign,\n    iconViewBox = props.iconViewBox,\n    size = props.size,\n    title = props.title,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var iconProps = _objectSpread(_objectSpread({\n    viewBox: iconViewBox,\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined\n  }, iconAttrs), otherProps);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, iconProps, {\n    ref: ref\n  }), title && /*#__PURE__*/React.createElement(\"title\", {\n    key: \"icon-title\"\n  }, title), children);\n});\nexport var StyledIconBase = /*#__PURE__*/styled(StyledIconBaseBase).withConfig({\n  displayName: \"StyledIconBase\",\n  componentId: \"sc-ea9ulj-0\"\n})([\"display:inline-block;vertical-align:\", \";overflow:hidden;\"], function (props) {\n  return props.iconVerticalAlign;\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Github = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z\",\n    clipRule: \"evenodd\"\n  }));\n});\nGithub.displayName = 'Github';\nexport var GithubDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var DarkMode = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.37 5.51A7.35 7.35 0 0 0 9.1 7.5c0 4.08 3.32 7.4 7.4 7.4.68 0 1.35-.09 1.99-.27A7.014 7.014 0 0 1 12 19c-3.86 0-7-3.14-7-7 0-2.93 1.81-5.45 4.37-6.49zM12 3a9 9 0 1 0 9 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 0 1-4.4 2.26 5.403 5.403 0 0 1-3.14-9.8c-.44-.06-.9-.1-1.36-.1z\"\n  }));\n});\nDarkMode.displayName = 'DarkMode';\nexport var DarkModeDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var LightMode = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 9c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3m0-2c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58a.996.996 0 0 0-1.41 0 .996.996 0 0 0 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37a.996.996 0 0 0-1.41 0 .996.996 0 0 0 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0a.996.996 0 0 0 0-1.41l-1.06-1.06zm1.06-10.96a.996.996 0 0 0 0-1.41.996.996 0 0 0-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36a.996.996 0 0 0 0-1.41.996.996 0 0 0-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z\"\n  }));\n});\nLightMode.displayName = 'LightMode';\nexport var LightModeDimensions = {\n  height: 24,\n  width: 24\n};","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { Github } from 'styled-icons/boxicons-logos';\nimport { LightMode, DarkMode } from 'styled-icons/material-outlined';\n\nimport { getTheme as getInitialTheme, toggleTheme } from '@utils/theme';\n\nconst StyledHeader = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 20px;\n  position: sticky;\n  top: 0;\n  background-color: var(--bg-color);\n  box-shadow: 0 0 4px var(--box-shadow-color);\n  opacity: 0.9;\n  z-index: 100;\n  transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n`;\n\nconst IconButton = styled.button`\n  color: var(--text-color);\n  padding: 8px;\n  background-color: transparent;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  user-select: none;\n  transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover {\n    background-color: var(--dimmed-light-color);\n    transition: 0.3s;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: inherit;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 16px;\n  background-color: var(--logo-bg-color);\n  padding: 5px 10px;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: var(--logo-bg-color);\n    transform: translateY(-1px);\n    box-shadow: 0 0 8px var(--box-shadow-color);\n  }\n  &:active {\n    transform: translateY(0);\n    box-shadow: none;\n  }\n`;\n\nconst Header = () => {\n  const [theme, setTheme] = React.useState(getInitialTheme());\n\n  const toggleThemeState = () => {\n    toggleTheme();\n    setTheme(getInitialTheme());\n  };\n\n  return (\n    <StyledHeader>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <StyledLink to=\"/\">\n            <img\n              src={'/favicon.ico'}\n              style={{ width: 24, height: 24, borderRadius: 16 }}\n            />\n            <h3 style={{ margin: 0, marginLeft: 4 }}>min.log</h3>\n          </StyledLink>\n        </div>\n\n        <div>\n          <IconButton onClick={toggleThemeState}>\n            {theme === 'light' ? (\n              <DarkMode width={24} height={24} />\n            ) : (\n              <LightMode width={24} height={24} />\n            )}\n          </IconButton>\n          <IconButton\n            onClick={() => window.open('https://github.com/minssung', '_blank')}\n          >\n            <Github width={24} height={24} />\n          </IconButton>\n        </div>\n      </div>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Header from './header';\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Main>{children}</Main>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n\nconst Main = styled.main`\n  flex-grow: 1;\n  padding: 40px;\n  box-shadow: 0 0 4px 0 var(--box-shadow-color);\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\n\ninterface SiteMetadata {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string;\n      image: string;\n      siteUrl: string;\n    };\n  };\n}\n\nexport const useSiteMetadata = () => {\n  const data: SiteMetadata = useStaticQuery(graphql`\n    query SiteMetadata {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from 'react';\nimport { useSiteMetadata } from '@hooks/useSiteMetadata';\n\nexport const SEO = ({\n  title,\n  description,\n  image,\n  pathname,\n  children,\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname || ``}`,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:site_name\" content={defaultTitle} />\n      <link rel=\"canonical\" href={seo.url} />\n      {children}\n    </>\n  );\n};\n","import React from 'react';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport styled from 'styled-components';\nimport { Tag } from '@components/tag';\n\nconst StyledCard = styled.div`\n  border-radius: 16px;\n  box-shadow: 0 2px 4px var(--box-shadow-color);\n  overflow: hidden;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 4px 8px var(--box-shadow-color);\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  aspect-ratio: 16/9;\n  overflow: hidden;\n\n  .gatsby-image-wrapper {\n    height: 100%;\n  }\n`;\n\nconst Content = styled.div`\n  padding: 1.5rem;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  margin: 0 0 0.5rem 0;\n`;\n\nconst DateText = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin: 0 0 1rem 0;\n`;\n\nconst TagList = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n  margin: 1rem 0;\n`;\n\nexport const PostCard = ({\n  title,\n  date,\n  tags,\n  image,\n}: {\n  title: string;\n  date: string;\n  tags: string[];\n  image: IGatsbyImageData;\n}) => {\n  const formattedDate = new Intl.DateTimeFormat('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }).format(new Date(date));\n\n  return (\n    <StyledCard>\n      <ImageWrapper>\n        <GatsbyImage image={image} alt={title} />\n      </ImageWrapper>\n      <Content>\n        <Title>{title}</Title>\n        <DateText>{formattedDate}</DateText>\n        {/* {tags?.length > 0 ? (\n          <TagList>\n            {tags.map((tag) => (\n              <Tag key={tag} tag={tag} />\n            ))}\n          </TagList>\n        ) : null} */}\n      </Content>\n    </StyledCard>\n  );\n};\n","import React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { getImage, IGatsbyImageData } from 'gatsby-plugin-image';\n\nimport { PostCard } from '@components/card';\nimport { defaultThumbnail } from './blog';\n\ninterface PostQuery {\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        id: string;\n        excerpt: string;\n        frontmatter: {\n          date: string;\n          title: string;\n          path: string;\n          thumbnail: {\n            childImageSharp: {\n              gatsbyImageData: IGatsbyImageData;\n            };\n          };\n          tags: string[];\n        };\n      };\n    }[];\n  };\n}\n\nexport default function Posts() {\n  const data: PostQuery = useStaticQuery(graphql`\n    query PostQuery {\n      allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n        edges {\n          node {\n            excerpt(pruneLength: 200)\n            id\n            frontmatter {\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n              path\n              thumbnail {\n                childImageSharp {\n                  gatsbyImageData(width: 600)\n                }\n              }\n              tags\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { edges: posts } = data.allMarkdownRemark;\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(240px, 1fr))',\n        gap: '1.5rem',\n      }}\n    >\n      {posts\n        .filter((post) => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n          const thumbnail =\n            getImage(\n              post.frontmatter.thumbnail?.childImageSharp?.gatsbyImageData,\n            ) ?? defaultThumbnail;\n\n          return (\n            <Link\n              key={post.id}\n              to={post.frontmatter.path}\n              style={{ color: 'inherit' }}\n            >\n              <PostCard\n                title={post.frontmatter.title}\n                date={post.frontmatter.date}\n                tags={post.frontmatter.tags}\n                image={thumbnail}\n              />\n            </Link>\n          );\n        })}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport Layout from '@components/layout';\nimport Posts from '../templates/posts';\nimport { SEO } from '@components/seo';\n\ninterface SiteQuery {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n}\n\ninterface HomePageQuery {\n  data: SiteQuery;\n  location: {\n    hash: string;\n    host: string;\n    hostname: string;\n    href: string;\n    key: string;\n    origin: string;\n    pathname: string;\n    port: string;\n    protocol: string;\n    search: string;\n    state: string;\n  };\n}\n\nexport default ({ data, location }: HomePageQuery) => {\n  return (\n    <Layout>\n      <Posts />\n    </Layout>\n  );\n};\n\nexport const Head = () => <SEO />;\n","import { getTheme } from '@utils/theme';\nimport React, { useEffect, useRef } from 'react';\n\nconst Comments = () => {\n  const commentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const giscus = document.createElement('script');\n    const htmlElement = document.documentElement;\n\n    const giscusConfig = {\n      src: 'https://giscus.app/client.js',\n      'data-repo': 'minssung/minssung.github.io',\n      'data-repo-id': 'R_kgDOHMH5pQ',\n      'data-category': 'Comments',\n      'data-category-id': 'DIC_kwDOHMH5pc4Cmyu0',\n      'data-mapping': 'pathname',\n      'data-strict': '0',\n      'data-reactions-enabled': '0',\n      'data-emit-metadata': '0',\n      'data-input-position': 'top',\n      'data-theme': getTheme(),\n      'data-lang': 'ko',\n      'data-loading': 'lazy',\n      crossorigin: 'anonymous',\n      async: true,\n    };\n\n    Object.entries(giscusConfig).forEach(([key, value]) => {\n      giscus.setAttribute(key, value.toString());\n    });\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === 'attributes' &&\n          mutation.attributeName === 'data-theme'\n        ) {\n          const iframe = document.querySelector<HTMLIFrameElement>(\n            'iframe.giscus-frame',\n          );\n          if (!iframe) return;\n\n          const theme = htmlElement.getAttribute('data-theme') || 'light';\n          iframe.contentWindow?.postMessage(\n            { giscus: { setConfig: { theme } } },\n            'https://giscus.app',\n          );\n        }\n      });\n    });\n\n    observer.observe(htmlElement, {\n      attributes: true,\n      attributeFilter: ['data-theme'],\n    });\n\n    if (commentRef.current) {\n      commentRef.current.appendChild(giscus);\n    }\n\n    return () => {\n      observer.disconnect();\n      commentRef.current?.removeChild(giscus);\n    };\n  }, []);\n\n  return <div ref={commentRef} />;\n};\n\nexport default Comments;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\nimport Layout from '@components/layout';\nimport { SEO } from '@components/seo';\nimport Comments from '@components/comments';\n\ninterface Query {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        data: string;\n        path: string;\n        title: string;\n        thumbnail: {\n          childImageSharp: {\n            gatsbyImageData: IGatsbyImageData;\n          };\n        };\n      };\n      html: string;\n      excerpt: string;\n    };\n  };\n}\n\nexport const defaultThumbnail: IGatsbyImageData = {\n  layout: 'constrained',\n  width: 600,\n  height: 30,\n  images: {\n    fallback: {\n      src: '',\n      srcSet: '',\n      sizes: '',\n    },\n    sources: [],\n  },\n};\n\nexport default function Template({ data }: Query) {\n  const { markdownRemark: post } = data;\n\n  return (\n    <Layout>\n      <div className=\"blog-post\">\n        <h2>{post.frontmatter.title}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        <Comments />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt(pruneLength: 150)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        path\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(width: 600)\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({ data }: Query) => {\n  const { markdownRemark: post } = data;\n\n  return (\n    <SEO\n      title={post.frontmatter.title}\n      description={post.excerpt}\n      image={\n        post.frontmatter.thumbnail?.childImageSharp?.gatsbyImageData?.images\n          ?.fallback?.src ?? ''\n      }\n    />\n  );\n};\n","type Theme = 'light' | 'dark';\n\nexport const getTheme = (): Theme => {\n  if (typeof document === 'undefined') return 'light';\n  return document.documentElement.getAttribute('data-theme') as\n    | 'light'\n    | 'dark';\n};\n\nexport const setTheme = (theme: Theme) => {\n  if (typeof document === 'undefined') return;\n  document.documentElement.setAttribute('data-theme', theme);\n  window.localStorage.setItem('theme', theme);\n};\n\nexport const toggleTheme = () => {\n  const next = getTheme() === 'light' ? 'dark' : 'light';\n  setTheme(next);\n};\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","StyledIconBaseBase","props","iconAttrs","iconViewBox","iconVerticalAlign","size","title","otherProps","iconProps","viewBox","undefined","focusable","StyledIconBase","withConfig","componentId","Github","fillRule","clipRule","DarkMode","LightMode","StyledHeader","styled","div","IconButton","button","StyledLink","Link","Header","theme","setTheme","React","getInitialTheme","justifyContent","alignItems","to","borderRadius","margin","marginLeft","onClick","toggleThemeState","toggleTheme","window","open","_ref","Main","main","SEO","description","pathname","defaultTitle","defaultDescription","defaultImage","siteUrl","useStaticQuery","site","siteMetadata","seo","url","name","content","property","rel","href","StyledCard","ImageWrapper","Content","Title","h2","DateText","PostCard","date","tags","formattedDate","Intl","DateTimeFormat","year","month","day","format","Date","GatsbyImage","Posts","data","edges","posts","allMarkdownRemark","gridTemplateColumns","gap","post","node","frontmatter","_getImage","_post$frontmatter$thu","_post$frontmatter$thu2","thumbnail","getImage","defaultThumbnail","id","path","color","location","Layout","Head","Comments","commentRef","useRef","useEffect","giscus","document","createElement","htmlElement","documentElement","giscusConfig","getTheme","crossorigin","async","entries","value","setAttribute","toString","observer","MutationObserver","mutations","mutation","attributeName","_iframe$contentWindow","iframe","getAttribute","contentWindow","postMessage","setConfig","observe","attributes","attributeFilter","appendChild","_commentRef$current","disconnect","removeChild","Template","markdownRemark","html","_ref2","_post$frontmatter$thu3","_post$frontmatter$thu4","_post$frontmatter$thu5","_post$frontmatter$thu6","excerpt","next","localStorage","setItem","toPropertyKey","configurable","writable","__esModule","_extends","assign","bind","hasOwnProperty","call","objectWithoutPropertiesLoose","includes","propertyIsEnumerable","_typeof","Symbol","toPrimitive","String","Number","iterator","constructor"],"sourceRoot":""}